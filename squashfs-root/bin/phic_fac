#!/bin/sh
######################################################################
# Copyright (C) 2016. Shanghai Feixun Communication Co.,Ltd.
#
# DISCREPTION   : 产测相关命令
# AUTHOR        : xiongyi.ouyang <xiongyi.ouyang@phicomm.com.cn>
# CREATED DATE  : 2016-05-24
# MODIFIED DATE :
######################################################################

. /lib/functions.sh

#set -xv
set -e

trap abort EXIT INT TERM

log()
{
    echo "[@] $@"
}

abort()
{
    echo "Test=NG"
    log "Aborted!"
    trap - EXIT
    exit 1
}

usage(){
    log "Usage:"
    log "  $0 [OPERATION] <COMMAND...>"
    log ""
    log "  OPERATION"
    log "     -g              get operation"
    log "     -s              set operation"
    log "     -h              display this help"
    log "  COMMANDS, with supported operation in [ ]"
    log "     mac             WAN mac.[gs]"
    log "                     e.g. $0 -s mac 8c:ab:8e:98:40:a8"
    log "     product         product name[g]"
    log "     fw_ver          firmware version[g]"
    log "     hw_ver          hardware version[g]"
    log "     ip <wan>        IP address[g]"
    log "     restore_reboot  restore to factory settings, then reboot[N/A]"
    log "     restore         restore to factory[N/A]"
    log "     2.4g-ch <1/6/11>          2.4GHz channel[gs]"
    log "     2.4g-ssid <xxx>           2.4GHz ssid[g]"
    log "     5.8g-ch <36/52/161>       5GHz channel[gs]"
    log "     5.8g-ssid <xxx>           5GHz ssid[g]"
    log "     fac_mode <Y/N>            factory mode flag[gs]"
    log "     2.4g_insmod               insmod 2.4g lkm[N/A]"
    log "     5.8g_insmod               insmod 5.8g lkm[N/A]"
    log "     mountfs                   mount rootfs"
    log "     telnet_enable <open/close>  open<close> telnet"
    log "     led                       fac<user>"
    log "     led=red                   only light red LED"
    log "     led=yellow                only light yellow LED"
    log "     led=blue                  only light blue LED"
    log "     auto_ch_sel <enable/disable>    enable<disable> auto channel select"
    log "     button                    fac<user>"
}

OP=
HELP=0

while [[ -n "$1" ]]; do
    case "$1" in
        -g) OP="get";;
        -s) OP="set";;
        -h) HELP=1; break;;
        -*)
            log "Invalid option: $1"
            exit 1;;
        *) break;;
    esac
    shift;
done

if [[ -z "$*" -o "$HELP" -gt 0 ]]; then
    usage
    trap - EXIT
    exit 1
fi

case "$1" in
#******************** MAC 操作 *************************
	mac)
        if [[ "$OP" = "get" ]]; then
            echo "MAC=`eth_mac r wan`"
        fi

        if [[ "$OP" = "set" ]]; then
            if [[ -n "$2" ]]; then
                eth_mac w mac `echo $2 | sed -e "s/:/ /g"`
                echo "Test=OK"
            else
                echo "Test=NG"
            fi
        fi
        break;;
	lan_mac)
        if [[ "$OP" = "get" ]]; then
            echo "LAN_MAC=`eth_mac r lan`"
		fi
		break;;
	wan_mac)
        if [[ "$OP" = "get" ]]; then
            echo "WAN_MAC=`eth_mac r wan`"
		fi
		break;;
	2.4g_mac)
		if [[ "$OP" = "get" ]]; then
			rax0=`ifconfig rax0 2>/dev/null`
			if [[ -z "$rax0" ]];then
				echo "Test=NG"
			else
				mac=`ifconfig rax0 | grep HWaddr | awk '{print $5}'`
				echo "2G_MAC=$mac"
			fi
		fi
		break;;
	5.8g_mac)
        if [[ "$OP" = "get" ]]; then
            echo "5G_MAC=`eth_mac r wlan_5`"
		fi
		break;;
########################################################
#******************** 产品信息 *************************
    product)
        if [[ "$OP" = "get" ]]; then
            echo "product=`uci get system.system.hostname`"
        fi
        break;;
    fw_ver)
        if [[ "$OP" = "get" ]]; then
            echo "fw_ver=`uci get system.system.fw_ver`"
        fi
        break;;
    hw_ver)
        if [[ "$OP" = "get" ]]; then
            echo "hw_ver=`uci get system.system.hw_ver`"
        fi
        break;;
########################################################
#****************** ip 信息 ***************************
    ip)
        if [[ "$OP" = "get" ]]; then
            case "$2" in
                wan)
                    echo "ip.wan=`uci get network.wan.ipaddr 2>/dev/null`"
                    break;;
                *)
                    exit 1
            esac
        fi
        break;;
#####################################################
#****************** 功能 ***************************
	mountfs)
		if [[ "$OP" == "set" ]];then
			mount_root
			echo "Test=ok"
		fi
		break;;
    restore_reboot)
        jffs2reset -y >/dev/null 2>/dev/null
        echo "Test=OK"
        reboot
        break;;
    restore)
        jffs2reset -y >/dev/null 2>/dev/null
        echo "Test=OK"
        break;;
    fac_mode)
        __mtd=$(find_mtd_part Factory)
        if [[ "$OP" = "get" ]]; then
            __flag=`dd if=$__mtd bs=1 skip=36 count=2 2>/dev/null | hexdump -e '/2 "%02X"'`
            if [[ "$__flag" = "1111" ]]; then
                echo "fac_mode=Y"
            else
                echo "fac_mode=N"
            fi
        fi

        if [[ "$OP" = "set" ]]; then
            if [[ -n "$2" ]]; then
                # Only "Y" means yes
                if [[ $2 = "Y" ]]; then
                    echo -n -e $'\x11\x11' | dd bs=1 seek=36 of=$__mtd count=2 conv=notrunc 2>/dev/null
                else
                    echo -n -e $'\xff\xff' | dd bs=1 seek=36 of=$__mtd count=2 conv=notrunc 2>/dev/null
                fi
                echo "Test=OK"
            else
                echo "Test=NG"
            fi
        fi
        break;;
	telnet_enable)
        __mtd=$(find_mtd_part Factory)
		if [[ "$OP" == "get" ]];then
            __flag=`dd if=$__mtd bs=1 skip=38 count=2 2>/dev/null | hexdump -e '/2 "%02X"'`
            if [[ "$__flag" = "FFFF" ]]; then
                echo "telnet=close"
            else
                echo "telnet=open"
            fi
		fi
		if [[ "$OP" == "set" ]];then
			if [[ "$2" == "open" ]];then
				iwpriv ra0 e2p 26=7010 > /dev/null 2>/dev/null
                echo "Test=OK"
			fi
			if [[ "$2" == "close" ]];then
				iwpriv ra0 e2p 26=FFFF > /dev/null 2>/dev/null
                echo "Test=OK"
			fi
		fi
        break;;
	led)
		pid=`ps | grep light_manage | awk '{print $1}' | sed -n '1p'`
		line=`ps | grep light_manage |  wc -l`
		if [[ "$OP" == "set" ]];then
			if [[ "$2" == "fac" ]];then
				if [[ "$line" != "1" ]]; then
					kill -9 "$pid"
				fi
				echo "Test=OK"
			elif [[ "$2" == "user" ]];then
				if [[ "$line" == "1" ]];then
					/etc/init.d/light_manage start >/dev/null 2>/dev/null
				fi
				echo "Test=OK"
			else
				echo "Test=NG"
			fi
		else
			if [[ "$line" == "1" ]];then
				echo "led=fac"
			else
				echo "led=user"
			fi
		fi
		break;;
	led=red)
		gpio l 13 0 4000 0 0 0
		gpio l 14 0 4000 0 0 0
		gpio l 15 0 4000 0 0 0
		echo "Test=OK"
		break;;
	led=blue)
		gpio l 13 4000 0 0 0 0
		gpio l 14 0 4000 0 0 0
		gpio l 15 4000 0 0 0 0
		echo "Test=OK"
		break;;
	led=yellow)
		gpio l 13 4000 0 0 0 0
		gpio l 14 4000 0 0 0 0
		gpio l 15 0 4000 0 0 0
		echo "Test=OK"
		break;;
	button)
		line_i=`ps | grep "button i" | wc -l`
		pid_i=`ps | grep "button i" | awk '{print $1}'|sed -n '1p'`

		line_l=`ps | grep "button l" | wc -l`
		pid_l=`ps | grep "button l" | awk '{print $1}'|sed -n '1p'`

		line_f=`ps | grep "button f" | wc -l`
		pid_f=`ps | grep "button f" | awk '{print $1}'|sed -n '1p'`
		if [[ "$OP" == "set" ]];then
			if [[ "$2" == "fac" ]];then
				/etc/init.d/button stop >/dev/null 2>/dev/null
				rm -f /dev/gpio
				if [[ "$line_l" == "2" ]];then
					button i &
					button f &
				fi
				echo "Test=OK"
			elif [[ "$2" == "user" ]];then
				if [[ "$line_l" == "1" ]];then
					kill -9 "$pid_f" >/dev/null 2>/dev/null
					kill -9 "$pid_i" >/dev/null 2>/dev/null
				fi
				/etc/init.d/button start >/dev/null 2>/dev/null
				echo "Test=OK"
			else
				echo "Test=NG"
			fi
		else
			if [[ "$line_l" == "1" ]];then
				echo "button=fac"
			else
				echo "button=user"
			fi
		fi
		break;;
#######################################################
#****************** wifi ******************************
	2.4g_insmod)
		ifconfig rax0 up
		echo "Test=OK"
		break;;
	5.8g_insmod)
		ifconfig ra0 up
		echo "Test=OK"
		break;;
    2.4g-ch)
        if [[ "$OP" = "get" ]]; then
            echo "2.4g-ch=`uci get wireless.mt7615e2.channel`"
        fi

        if [[ "$OP" = "set" ]]; then
            if [[ -n "$2" ]]; then
                uci set wireless.mt7615e2.channel="$2"
                uci commit wireless
                iwpriv ra0 set Channel="$2"
                echo "Test=OK"
            else
                echo "Test=NG"
            fi
        fi
        break;;
    2.4g-ssid)
        if [[ "$OP" = "get" ]]; then
            echo "2.4g-ssid=`uci get wireless.@wifi-iface[0].ssid`"
        fi
        break;;
    5.8g-ch)
        if [[ "$OP" = "get" ]]; then
            echo "5.8g-ch=`uci get wireless.mt7615e5.channel`"
        fi

        if [[ "$OP" = "set" ]]; then
            if [[ -n "$2" ]]; then
                uci set wireless.mt7615e5.channel="$2"
                uci commit wireless
                iwpriv rai0 set Channel="$2"
                echo "Test=OK"
            else
                echo "Test=NG"
            fi
        fi
        break;;
    5.8g-ssid)
        if [[ "$OP" = "get" ]]; then
            echo "5.8g-ssid=`uci get wireless.@wifi-iface[2].ssid`"
        fi
        break;;
    auto_ch_sel)
        if [[ "$OP" == "get" ]]; then
            if [[ `factory_ops -g auto_ch_sel` == "1" ]];then
                echo "auto_ch_sel=enable"
            else
                echo "auto_ch_sel=disable"
            fi
        else
            if [[ "$2" == "enable" ]];then
                factory_ops -s auto_ch_sel 1
                echo "Test=OK"
            elif [[ "$2" == "disable" ]];then
                factory_ops -s auto_ch_sel 0
                echo "Test=OK"
            else
                echo "Test=NG"
            fi
        fi
        break;;
##########################################################
    *)
        exit 1;
esac

trap - EXIT
exit 0
